// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:elapse_app/extras/firebase_token.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: firebaseTokens.web_api_key,
    appId: firebaseTokens.web_app_id,
    messagingSenderId: firebaseTokens.messagingSenderID,
    projectId: 'elapse',
    authDomain: 'elapse.firebaseapp.com',
    storageBucket: 'elapse.appspot.com',
    measurementId: 'G-CZP240Y9ZS',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: firebaseTokens.android_api_key,
    appId: firebaseTokens.android_app_id,
    messagingSenderId: firebaseTokens.messagingSenderID,
    projectId: 'elapse',
    storageBucket: 'elapse.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: firebaseTokens.ios_api_key,
    appId: firebaseTokens.ios_app_id,
    messagingSenderId:firebaseTokens.messagingSenderID,
    projectId: 'elapse',
    storageBucket: 'elapse.appspot.com',
    iosClientId:
        '1085802258375-f1vau2e0ddrdtti51ublrs33jrgnhv23.apps.googleusercontent.com',
    iosBundleId: 'com.example.elapseApp.RunnerTests',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: firebaseTokens.mac_api_key,
    appId: firebaseTokens.mac_app_id,
    messagingSenderId: firebaseTokens.messagingSenderID,
    projectId: 'elapse',
    storageBucket: 'elapse.appspot.com',
    iosClientId:
        '1085802258375-vmdr3i7hneb8a3lvenlgvdq8ae9vi1kt.apps.googleusercontent.com',
    iosBundleId: 'com.example.elapseApp',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: firebaseTokens.windows_api_key,
    appId: firebaseTokens.windows_app_id,
    messagingSenderId: firebaseTokens.messagingSenderID,
    projectId: 'elapse',
    authDomain: 'elapse.firebaseapp.com',
    storageBucket: 'elapse.appspot.com',
    measurementId: 'G-2V9D8WQ6K6',
  );
}
